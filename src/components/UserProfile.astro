---
import { setAstroSession } from "../lib/supabase";

const { supabase, data } = await setAstroSession(Astro.cookies);

let uid = data?.user?.id;
async function fetchProfile() {
  if (!data?.user?.id) return [];
  const { data: goals, error } = await supabase
    .from("profiles")
    .select("*")
    .eq("id", data?.user?.id);

  if (error) {
    console.error("Error fetching goals:", error);
    return [];
  }
  return goals || [];
}

const profile = await fetchProfile();
---

<div class="flex flex-col items-center p-4 space-y-4 text-slate-200">
  <user id="user" uid={uid} class="hidden"></user>
  <h1 class="text-2xl font-bold text-green-400">Profile</h1>

  <!-- Avatar Selection -->
  <!-- <div class="bg-gray-800 p-4 rounded-lg w-full md:w-2/3 space-y-4">
    <h2 class="text-xl font-bold text-green-400">Select Your Avatar</h2>
    <div class="flex space-x-4">
      <img
        src="/avatars/avatar1.png"
        alt="Avatar 1"
        class="w-16 h-16 rounded-full cursor-pointer border-2 border-transparent hover:border-green-400"
        id="avatar1"
      />
      <img
        src="/avatars/avatar2.png"
        alt="Avatar 2"
        class="w-16 h-16 rounded-full cursor-pointer border-2 border-transparent hover:border-green-400"
        id="avatar2"
      />
      <img
        src="/avatars/avatar3.png"
        alt="Avatar 3"
        class="w-16 h-16 rounded-full cursor-pointer border-2 border-transparent hover:border-green-400"
        id="avatar3"
      />
      <!-- Add more avatars as needed -->
    </div>
  </div> -->

  <!-- Bio and Personal Info -->
  <div class="bg-gray-800 p-4 rounded-lg w-full md:w-2/3 space-y-4">
    <h2 class="text-xl font-bold text-green-400">Personal Information</h2>
    <form id="profile-form" class="space-y-4">
      <div>
        <label for="name" class="block text-sm font-medium text-slate-400"
          >Name</label
        >
        <input
          type="text"
          id="name"
          name="name"
          class="w-full p-2 rounded-lg bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-green-400"
          placeholder={profile[0]?.username || "Enter your name"}
        />
      </div>
      <div>
        <label for="email" class="block text-sm font-medium text-slate-400"
          >Email</label
        >
        <input
          type="email"
          id="email"
          name="email"
          class="w-full p-2 rounded-lg bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-green-400 hover:cursor-not-allowed"
          placeholder={profile[0]?.email}
          disabled
        />
      </div>
      <!-- <div>
        <label for="location" class="block text-sm font-medium text-slate-400"
          >Address</label
        >
        <input
          type="text"
          id="location"
          name="location"
          class="w-full p-2 rounded-lg bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-green-400"
        />
      </div> -->
      <button
        type="submit"
        class="bg-green-400 text-gray-900 px-4 py-2 rounded-lg">Save</button
      >
    </form>
  </div>
</div>

<script>
  import { supabase } from "../lib/supabase";

  const uid = document.getElementById("user")?.getAttribute("uid");
  if (!uid) throw new Error("no uid");

  // Handle avatar selection
  document.querySelectorAll('img[id^="avatar"]').forEach((img) => {
    img.addEventListener("click", () => {
      document.querySelectorAll('img[id^="avatar"]').forEach((img) => {
        img.classList.remove("border-green-400");
        img.classList.add("border-transparent");
      });
      img.classList.remove("border-transparent");
      img.classList.add("border-green-400");
      // Handle avatar selection logic here, e.g., save the selected avatar ID to the user's profile
    });
  });

  // Handle form submission
  const form = document.getElementById("profile-form");
  if (!form) throw new Error("Form not found");
  form.addEventListener("submit", async (event) => {
    event.preventDefault();

    const nameInput = document.getElementById("name") as HTMLInputElement;
    const name = nameInput.value;

    const { data, error } = await supabase
      .from("profiles")
      .update({ username: name })
      .match({ id: uid });
    if (error) {
      console.error("Error updating name:", error);
    }
  });
</script>
