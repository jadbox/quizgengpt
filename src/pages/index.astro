---
import Layout from "../layouts/Layout.astro";
import ActivitiesPage from "../components/ActivitiesPage.astro";
import { supabase } from "../lib/supabase";
import { loginCheck } from "@/lib/auth";

import GoalList from "../components/GoalList.astro";
import PostSection from "../components/PostSection.astro";

const { cookies, redirect, rewrite } = Astro;

const accessToken = cookies.get("sb-access-token")?.value;
const refreshToken = cookies.get("sb-refresh-token")?.value;

Astro.request.headers.set("Cache-Control", "no-store");

// console.log("accessToken", accessToken, refreshToken, process.env.SITE);

// let email = "";
let name = "";
let hasGoals = false;
if (refreshToken && accessToken) {
  const { data, error } = await supabase.auth.setSession({
    refresh_token: refreshToken,
    access_token: accessToken,
  });

  // On Auth issue
  if (error || !data.user?.email) {
    console.error("ERROR", error);

    cookies.delete("sb-access-token", {
      path: "/",
    });
    cookies.delete("sb-refresh-token", {
      path: "/",
    });

    return rewrite("/signin");
  }

  // set name

  // Astro.cookies.set("email", data.user?.email || "");

  if (!data.user?.id) throw new Error("User not found");

  // delete goals older than 24hrs
  // await supabase
  //   .from("goals")
  //   .delete()
  //   .eq("uid", data.user?.id)
  //   .lt(
  //     "created_at",
  //     new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()
  //   );

  // if user has uncompleted goals in supabase, redirect to /goals
  // 24hrs to complete goals
  const { count, data:d } = await supabase
    .from("goals")
    .select("*", { count: "exact", head: false })
    .eq("uid", data.user?.id)
    .is("completed", null)
    .gte("created_at", new Date().toISOString().split("T")[0]);

    console.log("count", count, d);

  if (count && count > 0) {
   //  console.log("redirecting to /goals");
    hasGoals = true;
    // return rewrite("/goals");
  }

  // if (data.user?.email) email = data.user?.email;
}
// return data.user?.email;

const check = loginCheck(Astro);
if (check) return check;
---

<Layout title="Choose Your Goals" transition:animate="fade">
  {hasGoals ? (
    <GoalList />
    <PostSection />
  ) : (
     <ActivitiesPage />
  )}
</Layout>
