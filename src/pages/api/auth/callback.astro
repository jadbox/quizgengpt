---
export const prerender = false;
import type { APIRoute } from "astro";
import { supabase } from "../../../lib/supabase";

// do not cache
Astro.request.headers.set("Cache-Control", "no-store");

const authCode = Astro.url.searchParams.get("code") || "";
console.log("authCode", authCode);
if (!authCode) {
  // get list pf params keys as string
  // const params: string =
  //   "codes: " + Array.from(url.searchParams.keys()).join(", ");

  console.error("No code provided", Astro.params);
  return new Response("No code provided", { status: 400 });
} else console.log("authCode", authCode);

const { data, error } = await supabase.auth.exchangeCodeForSession(authCode);

if (error) {
  console.error("Error:", error);
  return new Response(error.message, { status: 500 });
}
console.log("data.user.id", data.user.id);

if (data.user.id)
  Astro.cookies.set("uid", data.user.id, {
    path: "/",
  });
else throw new Error("User not found");

if (data.user.email) Astro.cookies.set("email", data.user.email);

const { access_token, refresh_token } = data.session;

Astro.cookies.set("sb-access-token", access_token, {
  path: "/",
});
Astro.cookies.set("sb-refresh-token", refresh_token, {
  path: "/",
});

console.info("CB redirecting to /");
return Astro.redirect("/");
---
